buildscript {
	ext {
		springBootVersion = '2.0.0.M5'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'com.jcpv.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web'){
			exclude group: 'org.springframework.boot:spring-boot-starter-logging'}
	compile('org.springframework.boot:spring-boot-starter-web-services')
	compile('org.springframework.session:spring-session')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('org.springframework.boot:spring-boot-starter-log4j2')

	compile("org.springframework.boot:spring-boot-devtools")

	compile('org.liquibase:liquibase-core')
	runtime('com.h2database:h2')
	runtime('mysql:mysql-connector-java')
	testCompile("junit:junit")
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')


}

bootRun {
	// Use Spring Boot DevTool only when we run Gradle bootRun task
	//classpath = sourceSets.main.runtimeClasspath + configurations.dev
}
